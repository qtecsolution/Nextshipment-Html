@use '../../global' as *;
@use '../../partials' as *;

input,
select,
textarea {
  border: none;

  &:focus {
    outline: none;
  }
}

input[type="date"]::before {
  content: attr(data-placeholder);
  @include w100;
}

input[type="date"]:focus::before,
input[type="date"]:valid::before {
  display: none;
}

textarea {
  resize: none;
}

// HIDE INPUT ARROWS
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  appearance: textfield;
  -moz-appearance: textfield;
}

input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;

  &:focus {
    outline: none;
  }
}

.form-control {
  @include setBgColor($white, $blacktext);
  border-color: $borderinput;
  @include radius(2);
  font-size: size(14);
  font-weight: 500;
  padding: size(12.5) size(16);
  @include transitionsall;

  @include breakpoint(desktop1400) {
    font-size: size(16);
  }

  &::placeholder {
    color: $placeholdertext;
    font-weight: 400;
  }
}

.form-select {
  border-color: $borderinput;
  @include radius(2);
  cursor: pointer;
  font-size: size(14);
  font-weight: 500;
  padding: size(12.5) size(16);
  @include transitionsall;

  @include breakpoint(desktop1400) {
    font-size: size(16);
  }
}

.form-control,
.form-select {
  &:focus {
    box-shadow: none;
    outline: none;
    border-color: $primary;
  }
}

.form-control.is-invalid, .was-validated .form-control:invalid {
  box-shadow: none;
  
  &:focus {
    box-shadow: none;
    outline: none;
  }
}

.was-validated .form-control:valid {
  &:focus {
    box-shadow: none;
    outline: none;
  }
}

.form-control.is-valid, .was-validated .form-control:valid,
.form-select.is-valid, .was-validated .form-select:valid {
  background-image: url("data:image/svg+xml,%3Csvg width='20' height='20' viewBox='0 0 20 20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0_619_816)'%3E%3Cpath d='M9.9974 18.3332C14.5998 18.3332 18.3307 14.6022 18.3307 9.99984C18.3307 5.39746 14.5998 1.6665 9.9974 1.6665C5.39502 1.6665 1.66406 5.39746 1.66406 9.99984C1.66406 14.6022 5.39502 18.3332 9.9974 18.3332Z' stroke='%2302B290' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M13 8L8.875 12L7 10.1818' stroke='%2302B290' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0_619_816'%3E%3Crect width='20' height='20' fill='white'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A");
}

// .form-select.is-invalid:not([multiple]):not([size]), .form-select.is-invalid:not([multiple])[size="1"], .was-validated .form-select:invalid:not([multiple]):not([size]), .was-validated .form-select:invalid:not([multiple])[size="1"] {
  // --bs-form-select-bg-icon: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 10L12 16L18 10H6Z' fill='%231B1B1B'/%3E%3C/svg%3E%0A");
// }

.form-select.is-invalid:focus, .was-validated .form-select:invalid:focus {
  box-shadow: none;
  outline: none;
  border-color: $primary;
}

.form-select {
  --bs-form-select-bg-img: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 10L12 16L18 10H6Z' fill='%231B1B1B'/%3E%3C/svg%3E%0A");
  --bs-form-select-bg-icon: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M6 10L12 16L18 10H6Z' fill='%231B1B1B'/%3E%3C/svg%3E%0A");
}

.output {
  @include flex-center-between;
  height: size(48);
  @include border(solid, 1, $borderinput);
  @include radius(2);
  padding: size(12.5) size(10) size(12.5) size(16);

  .text {
    color: $placeholdertext;
    font-size: size(14);
    font-weight: 400;
  }

  .uploadlabel {
    cursor: pointer;
    @include setBgColor($blacktext, $white);
    @include radius(2);
    @include flex-center;
    text-align: center;
    padding: size(8) size(12);
    font-size: size(13);
    font-weight: 600;
    @include transitionsall;

    @include hover {
      @include setBgColor($bodytext, $white);
    }
  }
}

.form-control.is-valid ~ .output, .was-validated .form-control:valid ~ .output {
  border-color: $success;
  box-shadow: none;
  outline: none;
}

.form-control.is-invalid ~ .output, .was-validated .form-control:invalid ~ .output {
  border-color: $danger;
}

.input-group {
  &-text {
    background: $inputborder;
    font-size: size(15);
    @include radius(0);
  }
}

.form-check {
  padding-left: size(0);
  margin-bottom: size(0);

  &-input {
    &:checked {
      ~ .form-check-label {
        &::before {
          opacity: 1;
          visibility: visible;
        }
        
        &::after {
          border-color: $primary;
        }
      }
    }
  }

  &-label {
    color: $bodytext;
    cursor: pointer;
    font-size: size(14);
    font-style: normal;
    font-weight: 300;
    position: relative;
    padding-left: size(28);

    @include breakpoint(desktop1400) {
      font-size: size(16);
    }
    
    &::before,
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      @include circle;
      @include translateY(-50%);
      left: 0;
      @include transitionsall;
    }

    &::before {
      @include square(10);
      left: size(4);
      background: $primary;
      opacity: 0;
      visibility: hidden;
    }
    
    &::after {
      @include square(18);
      @include border(solid, 1, $placeholdertext);
    }
  }
}

.form-check-input.is-invalid~.form-check-label, .was-validated .form-check-input:invalid~.form-check-label {
  &::after {
    border-color: $danger;
  }
}

.form-check-input.is-valid~.form-check-label, .was-validated .form-check-input:valid~.form-check-label {
  &::after {
    border-color: $success;
  }
}

.radiobox {
  input[type="radio"] {
    &:checked ~ .radiolabel {
      color: $primary;
    }
  }

  .radiolabel {
    @include setBgColor($white, $blacktext);
    @include radius(2);
    cursor: pointer;
    @include flex-center;
    font-size: size(14);
    font-style: normal;
    font-weight: 600;
    height: size(40);
    
    @include breakpoint(desktop1400) {
      font-size: size(16);
    }
  }
}