@use "../global" as *;
@use "../partials" as *;

.authenticmain {
  padding-top: size(40);
  padding-bottom: size(80);
  
  @include breakpoint(tab992) {
    padding-top: size(0);
    padding-bottom: size(160);
  }
  
  @include breakpoint(desktop1400) {
    padding-bottom: size(320);
  }
}

.authenticinfo {
  background: $white;
  @include border(solid, 1, $inputborder);
  @include flex-center-column;
  gap: size(40);
  padding: size(20);
  text-align: center;

  @include breakpoint(mobile768) {
    padding: size(48);
    max-width: size(530);
    margin-inline: auto;
  }

  @include breakpoint(tab992) {
    padding: size(64);
    margin: 0;
  }

  .invalid-feedback {
    text-align: left;
  }

  &-header {
    @include flex-center-column;
    gap: size(20);

    p {
      color: $placeholdertext;
      font-size: size(14);
      font-weight: 400;
    }
  }

  .formtext {
    color: $placeholdertext;
    font-size: size(14);
    font-weight: 400;
  }

  &-body {
    .btn-login {
      padding: size(13.5) size(40);
    }
  }

  &-footer {
    p {
      color: $bodytext;
      font-size: size(14);
      font-weight: 400;

      .authlink {
        color: $primary;
        font: inherit;
        @include transitionsall;

        @include hover {
          color: $hoverbg;
          text-decoration: underline;
        }
      }
    }

    .authbuttons {
      @include flex-center;
      gap: size(8);
      color: $placeholdertext;
      font-size: size(14);
      font-weight: 400;
      text-align: center;

      button {
        font: inherit;
      }

      .btn-reset {
        @include setBgColor(transparent, $bodytext);

        @include hover {
          @include setBgColor(transparent, $sectionbgdark);
        }
      }

      .btn-resend {
        @include setBgColor(transparent, $primary);

        @include hover {
          @include setBgColor(transparent, $hoverbg);
        }
      }
    }
  }
}